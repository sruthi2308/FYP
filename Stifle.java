/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
import java.io.*;
import java.sql.*;
/**
 *
 * @author Admin
 */
public class Stifle extends javax.swing.JFrame {

    /**
     * Creates new form Stifle
     */
    public Stifle() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        jButton1.setText("DW-Stifle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DS-Stifle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DF-Stifle");

        jLabel1.setText("TYPES OF STIFLE ANTIPATTERN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jButton1)
                .addGap(104, 104, 104)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(42, 42, 42))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.jdbc.Driver");
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/antipatterndb?useUnicode=yes&characterEncoding=UTF-8","root","info123.");
            Statement stmt = conn.createStatement();
            
            PreparedStatement ps1=null,ps2=null,pst2=null;
            
            String s1="delete from split";
            ps1=conn.prepareStatement(s1);
            ps1.executeUpdate();
            //ps1.close();
            String select1=null,from1=null,where1=null;
            int no=0;
            PreparedStatement pst=null,pst1=null;
            String ss=null,ff=null,ww=null;
            int nn=0;
            Scanner sc;
            sc = new Scanner(new File("output.txt"));
            while(sc.hasNext())
        {   
                System.out.println(++no);
                String store=sc.nextLine();
                String[] sp = store.split(" ");
                select1=sp[1];
                from1=sp[3];
                where1=sp[5];
                System.out.println("select1 = "+select1);
                System.out.println("from1 = "+from1);
                System.out.println("where1 = "+where1);
                System.out.println("store : "+store);
                String str="insert into split values(?,?,?,?)";
                    pst= conn.prepareStatement(str);
                    pst.setInt(1,no );
                    pst.setString(2,select1 );
                    pst.setString(3,from1);
                    pst.setString(4,where1);
                pst.execute();
//System.out.println("inserted into split");                
                String s2="delete from splitnew";
                ps2=conn.prepareStatement(s2);
            ps2.executeUpdate();
//System.out.println("deleted from splitnew"); 
            //ps2.close();
                
            String str1="insert into splitnew(select11,from11,where11) select distinct select1,from1,where1 from split";
                    pst1= conn.prepareStatement(str1);
                    pst1.execute();
//System.out.println("inserted into splitnew");
    // String sql = "SELECT @n := @n  + 1 n, select11,from11,where11 FROM splitnew, (SELECT @n := 0) m ORDER BY select11,from11,where11";
               
        }
        
        String s2="delete from splitno";
        ps2=conn.prepareStatement(s2);
            ps2.executeUpdate();
//System.out.println("deleted from splitno"); 
            //ps2.close();
        
        String sql="SELECT * FROM SPLITNEW";
        Statement stmt1 = null;
        stmt1 = conn.createStatement();
            ResultSet rs = stmt1.executeQuery(sql);
      while(rs.next()){
                 //nn=rs.getInt("n");
                 ss=rs.getString("select11");
                 ff=rs.getString("from11");
                 ww=rs.getString("where11");
                 
            String str2="insert into splitno values(?,?,?,?)";
                    pst2= conn.prepareStatement(str2);
                    pst2.setInt(1,++nn );
                    pst2.setString(2,ss );
                    pst2.setString(3,ff);
                    pst2.setString(4,ww);
                pst2.execute();
            //System.out.println("\n\nLAST VALUE : "+nn+" "+ss+" "+ff+" "+ww);
        }
//System.out.println("inserted into splitno"); 

           ArrayList<String> sarr=new ArrayList<>();
            ArrayList<String> farr=new ArrayList<>();
            ArrayList<String> warr=new ArrayList<>();
            ArrayList<Integer> sn=new ArrayList<>();
            ArrayList<Integer> fn=new ArrayList<>();
            ArrayList<Integer> wn=new ArrayList<>();
            
            //Statement stmtt = conn.createStatement();
            
            PreparedStatement ps11=null,ps22=null,pst22=null;
            String full=null;
            FileWriter fw=new FileWriter("C:\\Users\\Admin\\Documents\\NetBeansProjects\\ANTIPATTERN\\stifle.txt",true);
BufferedWriter bw = new BufferedWriter(fw);
    PrintWriter out = new PrintWriter(bw);
            String sqll="SELECT * FROM SPLITNEW";
        Statement stmt11 = null;
        stmt11 = conn.createStatement();
            ResultSet rs1 = stmt11.executeQuery(sqll);
      String sss,fff,www;
      while(rs1.next()){
          
               //nn=rs.getInt("n");
                 sss=rs1.getString("select11");
                 fff=rs1.getString("from11");
                 www=rs1.getString("where11");
                 sarr.add(sss);
                 farr.add(fff);
                 warr.add(www);
                 sn.add(sarr.indexOf(sss));
                 fn.add(farr.indexOf(fff));
                 wn.add(warr.indexOf(www));
           
      }
      for(int i=0;i<sarr.size();i++)
            {
                int sn1=sn.get(i)+1;
                int fn1=fn.get(i)+1;
                int wn1=wn.get(i)+1;
                System.out.println(sn1+"  "+fn1+"  "+wn1);
                
                String sn1s=Integer.toString(sn1);
                String fn1s=Integer.toString(fn1);
                String wn1s=Integer.toString(wn1);
                
                //String strLine="";
                //fw.append(strLine+"\r\n");
                fw.append(sn1s+"\r\n");
                fw.append(fn1s+"\r\n");
                fw.append(wn1s+"\r\n"); 
                full=full+sn1s+" "+fn1s+" "+wn1s+"\n";
               /* out.println(sn1s);
                out.println(fn1s);
                out.println(wn1s); */
            }
            
            fw.write(full);
            
      /*
      Scanner sc=new Scanner(new File("output.txt"));
        while(sc.hasNext())
        {
            if(sc.nextLine().contains("WHERE specObjID"))
            {
                String test =  sc.nextLine();
                String lastWord = test.substring(test.lastIndexOf("=")+1);
                //System.out.println(lastWord);
                System.out.println(sc.nextLine().replaceAll("=", " IN "));
            }
        }
        */
       
      
      //FileInputStream fstream = new FileInputStream("C:\\Users\\Admin\\Documents\\NetBeansProjects\\ANTIPATTERN\\input.txt");
//BufferedReader br = new BufferedReader(new InputStreamReader(fstream));


        }
        catch(Exception ee)
        {
            ee.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
static String between(String value, String a, String b) {
        // Return a substring between the two strings.
        int posA = value.indexOf(a);
        if (posA == -1) {
            return "";
        }
        int posB = value.lastIndexOf(b);
        if (posB == -1) {
            return "";
        }
        int adjustedPosA = posA + a.length();
        if (adjustedPosA >= posB) {
            return "";
        }
        return value.substring(adjustedPosA, posB);
    }

    static String before(String value, String a) {
        // Return substring containing all characters before a string.
        int posA = value.indexOf(a);
        if (posA == -1) {
            return "";
        }
        return value.substring(0, posA);
    }

    static String after(String value, String a) {
        // Returns a substring containing all characters after a string.
        int posA = value.lastIndexOf(a);
        if (posA == -1) {
            return "";
        }
        int adjustedPosA = posA + a.length();
        if (adjustedPosA >= value.length()) {
            return "";
        }
        return value.substring(adjustedPosA);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
        Scanner sc=new Scanner(new File("output.txt"));
        while(sc.hasNext())
        {
            
            
            /*if(sc.next().contains("from"))
            {
                System.out.println("Result "+sc.nextLine());
            }*/
          //  System.out.println(sc.next().indexOf("FROM"));
            
            //System.out.println(between(sc.next()
        //System.out.println(between(sc.next(), ":", "="));
String test;
test=sc.nextLine();
        //System.out.println(before(sc.next(), "FROM"));
        //System.out.println(before(sc.next(), "=")); 
//if(test.contains("FROM emp WHERE id=8"))
       // System.out.println(after(sc.nextLine(), "FROM"));
       // System.out.println(test);
       // System.out.println(after(test, "="));
String[] sp = test.split(" ");
    System.out.println(sp[1]);
    
        }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stifle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stifle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stifle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stifle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stifle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
